<?php

/**
 * @file
 * Tide Landing Page install.
 */

use Drupal\field\Entity\FieldConfig;
use Drupal\search_api\Item\Field;
use Drupal\workflows\Entity\Workflow;

/**
 * Implements hook_install().
 */
function tide_landing_page_install() {
  // Enable Editorial workflow if workflow module is enabled.
  $moduleHandler = \Drupal::service('module_handler');
  if ($moduleHandler->moduleExists('workflows')) {
    $editorial_workflow = Workflow::load('editorial');
    if ($editorial_workflow) {
      $editorial_workflow->getTypePlugin()->addEntityTypeAndBundle('node', 'landing_page');
      $editorial_workflow->save();
    }
  }

  // Retroactively support existing content types in the Referred Content
  // field of Card automated paragraphs.
  $supported_paragraph_types = [
    'card_navigation_featured_auto',
    'card_navigation_auto',
    'card_promotion_auto',
  ];
  foreach ($supported_paragraph_types as $supported_paragraph_type) {
    $field_config = FieldConfig::loadByName("paragraph", $supported_paragraph_type, "field_paragraph_reference");
    if ($field_config) {
      $handler_settings = $field_config->getSetting('handler_settings');
      $info = \Drupal::service('entity_type.bundle.info')->getAllBundleInfo();
      foreach ($info as $type => $bundles) {
        if ($type == 'node') {
          foreach (array_keys($bundles) as $bundle) {
            $handler_settings['target_bundles'][$bundle] = $bundle;
          }
        }
      }
      $field_config->setSetting('handler_settings', $handler_settings);
      $field_config->save();
    }
  }

  /** @var \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler */
  $moduleHandler = \Drupal::service('module_handler');
  $field_config = FieldConfig::loadByName('node', 'landing_page', 'field_landing_page_component');
  if ($field_config) {
    $handler_settings = $field_config->getSetting('handler_settings');
    // Add the Featured News paragraph to Landing Page component if exists.
    if ($moduleHandler->moduleExists('tide_news')) {
      $handler_settings['target_bundles']['featured_news'] = 'featured_news';
    }
    // Add the Embedded Webform paragraph to Landing Page component if exists.
    if ($moduleHandler->moduleExists('tide_webform')) {
      $handler_settings['target_bundles']['embedded_webform'] = 'embedded_webform';
    }
    $field_config->setSetting('handler_settings', $handler_settings);
    $field_config->save();
  }

  _tide_landing_page_add_fields_search_api();

  // Enable entity type/bundles for use with scheduled transitions.
  if (\Drupal::moduleHandler()->moduleExists('scheduled_transitions')) {
    $config_factory = \Drupal::configFactory();
    $config = $config_factory->getEditable('scheduled_transitions.settings');
    $bundles = $config->get('bundles');
    if ($bundles) {
      foreach ($bundles as $bundle) {
        $enabled_bundles = [];
        $enabled_bundles[] = $bundle['bundle'];
      }
      if (!in_array('landing_page', $enabled_bundles)) {
        $bundles[] = ['entity_type' => 'node', 'bundle' => 'landing_page'];
        $config->set('bundles', $bundles)->save();
      }
    }
    else {
      $bundles[] = ['entity_type' => 'node', 'bundle' => 'landing_page'];
      $config->set('bundles', $bundles)->save();
    }
  }

}

/**
 * Add fields to search API.
 */
function _tide_landing_page_add_fields_search_api() {
  $moduleHandler = \Drupal::service('module_handler');
  if ($moduleHandler->moduleExists('tide_search')) {
    $index_storage = \Drupal::entityTypeManager()
                            ->getStorage('search_api_index');
    $index = $index_storage->load('node');

    // Index the Intro field.
    $field_landing_page_intro = new Field($index, 'field_landing_page_intro_text');
    $field_landing_page_intro->setType('text');
    $field_landing_page_intro->setPropertyPath('field_landing_page_intro_text');
    $field_landing_page_intro->setDatasourceId('entity:node');
    $field_landing_page_intro->setLabel('Introduction text');
    $index->addField($field_landing_page_intro);

    // Index the summary field.
    $field_landing_page_summary = new Field($index, 'field_landing_page_summary');
    $field_landing_page_summary->setType('text');
    $field_landing_page_summary->setPropertyPath('field_landing_page_summary');
    $field_landing_page_summary->setDatasourceId('entity:node');
    $field_landing_page_summary->setBoost(1);
    $field_landing_page_summary->setLabel('Summary');
    $index->addField($field_landing_page_summary);

    // Index the field field_paragraph_body.
    $field_paragraph_body = new Field($index, 'field_paragraph_body');
    $field_paragraph_body->setType('text');
    $field_paragraph_body->setPropertyPath('field_landing_page_component:entity:field_paragraph_body');
    $field_paragraph_body->setDatasourceId('entity:node');
    $field_paragraph_body->setLabel('Content components » Paragraph » Body');
    $index->addField($field_paragraph_body);

    // Index the field field_paragraph_topic.
    $field_paragraph_topic = new Field($index, 'field_paragraph_topic');
    $field_paragraph_topic->setType('integer');
    $field_paragraph_topic->setPropertyPath('field_landing_page_component:entity:field_paragraph_topic');
    $field_paragraph_topic->setDatasourceId('entity:node');
    $field_paragraph_topic->setLabel('Content components » Paragraph » Topic');
    $index->addField($field_paragraph_topic);

    // Index the field field_paragraph_topic_name.
    $field_paragraph_topic_name = new Field($index, 'field_paragraph_topic_name');
    $field_paragraph_topic_name->setType('integer');
    $field_paragraph_topic_name->setPropertyPath('field_landing_page_component:entity:field_paragraph_topic:entity:name');
    $field_paragraph_topic_name->setDatasourceId('entity:node');
    $field_paragraph_topic_name->setBoost(5);
    $field_paragraph_topic_name->setLabel('Content components » Paragraph » Topic » Taxonomy term » Name');
    $index->addField($field_paragraph_topic_name);

    // Index the field field_paragraph_title.
    $field_paragraph_title = new Field($index, 'field_paragraph_title');
    $field_paragraph_title->setType('text');
    $field_paragraph_title->setPropertyPath('field_landing_page_component:entity:field_paragraph_title');
    $field_paragraph_title->setDatasourceId('entity:node');
    $field_paragraph_title->setLabel('Content components » Paragraph » Title');
    $field_paragraph_title->setBoost(13);
    $index->addField($field_paragraph_title);

    // Index the summary field field_paragraph_summary.
    $field_paragraph_summary = new Field($index, 'field_paragraph_summary');
    $field_paragraph_summary->setType('text');
    $field_paragraph_summary->setPropertyPath('field_landing_page_component:entity:field_paragraph_summary');
    $field_paragraph_summary->setDatasourceId('entity:node');
    $field_paragraph_summary->setLabel('Content components » Paragraph » Summary');
    $index->addField($field_paragraph_summary);

    // Index the summary field field_paragraph_accordion_name.
    $field_paragraph_accordion_name = new Field($index, 'field_paragraph_accordion_name');
    $field_paragraph_accordion_name->setType('text');
    $field_paragraph_accordion_name->setPropertyPath('field_landing_page_component:entity:field_paragraph_accordion_name');
    $field_paragraph_accordion_name->setDatasourceId('entity:node');
    $field_paragraph_accordion_name->setBoost(5);
    $field_paragraph_accordion_name->setLabel('Content components » Paragraph » Accordion Content » Paragraph » Item Name');
    $index->addField($field_paragraph_accordion_name);

    // Index the summary field field_paragraph_accordion_body.
    $field_paragraph_accordion_body = new Field($index, 'field_paragraph_accordion_body');
    $field_paragraph_accordion_body->setType('text');
    $field_paragraph_accordion_body->setPropertyPath('field_landing_page_component:entity:field_paragraph_accordion_body');
    $field_paragraph_accordion_body->setDatasourceId('entity:node');
    $field_paragraph_accordion_body->setLabel('Content components » Paragraph » Accordion Content » Paragraph » Body');
    $index->addField($field_paragraph_accordion_body);

    // Index the summary field field_landing_page_contact_name.
    $field_landing_page_contact_name = new Field($index, 'field_landing_page_contact_name');
    $field_landing_page_contact_name->setType('text');
    $field_landing_page_contact_name->setPropertyPath('field_landing_page_contact:entity:field_paragraph_name');
    $field_landing_page_contact_name->setDatasourceId('entity:node');
    $field_landing_page_contact_name->setBoost(1);
    $field_landing_page_contact_name->setLabel('Content components » Paragraph » Name');
    $index->addField($field_landing_page_contact_name);

    // Index the summary field field_landing_page_contact_body.
    $field_landing_page_contact_body = new Field($index, 'field_landing_page_contact_body');
    $field_landing_page_contact_body->setType('text');
    $field_landing_page_contact_body->setPropertyPath('field_landing_page_contact:entity:field_paragraph_body');
    $field_landing_page_contact_body->setDatasourceId('entity:node');
    $field_landing_page_contact_body->setLabel('Content components » Paragraph » Body');
    $index->addField($field_landing_page_contact_body);

    // Index the summary field field_paragraph_topic_uuid.
    $field_paragraph_topic_uuid = new Field($index, 'field_paragraph_topic_uuid');
    $field_paragraph_topic_uuid->setType('string');
    $field_paragraph_topic_uuid->setPropertyPath('field_landing_page_component:entity:field_paragraph_topic:entity:uuid');
    $field_paragraph_topic_uuid->setDatasourceId('entity:node');
    $field_paragraph_topic_uuid->setLabel('Content components » Paragraph » Topic » Taxonomy term » UUID');
    $index->addField($field_paragraph_topic_uuid);

    $index->save();
  }
}
